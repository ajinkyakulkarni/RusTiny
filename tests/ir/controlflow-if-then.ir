fn foo() {
entry-block1:
    {a} = alloca
    {ret_slot} = alloca
    store 2 {a}
    %2 = load {a}
    %1 = cmp eq %2 2
    br %1 conseq1 next1
conseq1:
    %4 = load {a}
    %3 = add %4 3
    store %3 {a}
    jmp next1
next1:
    %5 = load {a}
    store %5 {ret_slot}
    jmp return
return1:
    %6 = load {ret_slot}
    ret %6
}

fn main() {
entry-block2:
    {a} = alloca
    %0 = call foo
    store %0 {a}
    ret void
}